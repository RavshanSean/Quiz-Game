export const javascriptData = [
    {
      question: 'What is the correct syntax to print a message in the console?',
      option1: 'console.log("message");',
      option2: 'print("message");',
      option3: 'console.print("message");',
      option4: 'log("message");',
      ans: 1,
    },
    {
      question: 'Which of the following is a primitive data type in JavaScript?',
      option1: 'Object',
      option2: 'Array',
      option3: 'Number',
      option4: 'Function',
      ans: 3,
    },
    {
      question: 'Which keyword is used to declare a variable in JavaScript?',
      option1: 'let',
      option2: 'var',
      option3: 'const',
      option4: 'all of the above',
      ans: 4,
    },
    {
      question: 'What is the output of 2 + "2" in JavaScript?',
      option1: '4',
      option2: '22',
      option3: 'NaN',
      option4: 'Error',
      ans: 2,
    },
    {
      question: 'Which method is used to add an element to the end of an array?',
      option1: 'append()',
      option2: 'push()',
      option3: 'add()',
      option4: 'insert()',
      ans: 2,
    },
    {
      question: 'What is the purpose of the "return" statement in a function?',
      option1: 'To exit the function',
      option2: 'To return a value from the function',
      option3: 'To continue the execution of the function',
      option4: 'None of the above',
      ans: 2,
    },
    {
      question: 'How can you prevent a form from submitting in JavaScript?',
      option1: 'form.preventDefault();',
      option2: 'event.preventDefault();',
      option3: 'preventSubmit();',
      option4: 'submit.prevent();',
      ans: 2,
    },
    {
      question: 'Which of the following is NOT a valid JavaScript operator?',
      option1: '+',
      option2: '-',
      option3: '&&',
      option4: '**',
      ans: 4,
    },
    {
      question: 'How do you create a function in JavaScript?',
      option1: 'function myFunction() {}',
      option2: 'create function myFunction() {}',
      option3: 'function = myFunction() {}',
      option4: 'function: myFunction() {}',
      ans: 1,
    },
    {
      question: 'Which method is used to select an element by its ID in JavaScript?',
      option1: 'getElementById()',
      option2: 'getElementByClass()',
      option3: 'getById()',
      option4: 'selectById()',
      ans: 1,
    },
    {
      question: 'What is the result of 0 === "0" in JavaScript?',
      option1: 'true',
      option2: 'false',
      option3: 'undefined',
      option4: 'NaN',
      ans: 2,
    },
    {
      question: 'Which operator is used to compare both value and type in JavaScript?',
      option1: '==',
      option2: '===',
      option3: '!=',
      option4: '!==',
      ans: 2,
    },
    {
        question: 'Which of the following is a falsy value in JavaScript?',
        option1: '0',
        option2: '1',
        option3: 'true',
        option4: '"false"',
        ans: 1,
      },
      {
        question: 'What does the "this" keyword refer to in a function?',
        option1: 'The function itself',
        option2: 'The global object',
        option3: 'The object calling the function',
        option4: 'The return value of the function',
        ans: 3,
      },
      {
        question: 'Which of the following methods can be used to convert a string to an integer?',
        option1: 'parseFloat()',
        option2: 'parseInt()',
        option3: 'toString()',
        option4: 'convertToInt()',
        ans: 2,
      },
      {
        question: 'Which of the following is used to handle errors in JavaScript?',
        option1: 'try-catch',
        option2: 'throw-catch',
        option3: 'catch-throw',
        option4: 'error-handler',
        ans: 1,
      },
      {
        question: 'What does JSON stand for?',
        option1: 'JavaScript Object Notation',
        option2: 'JavaScript Object Network',
        option3: 'JavaSource Object Notation',
        option4: 'JavaScript Option Notation',
        ans: 1,
      },
      {
        question: 'Which method removes the last element from an array?',
        option1: 'pop()',
        option2: 'shift()',
        option3: 'remove()',
        option4: 'delete()',
        ans: 1,
      },
      {
        question: 'What does the "typeof" operator do?',
        option1: 'Checks if a variable is of a specific type',
        option2: 'Returns the type of a variable',
        option3: 'Converts a variable to a specific type',
        option4: 'None of the above',
        ans: 2,
      },
      {
        question: 'Which of the following methods can be used to iterate over an array in JavaScript?',
        option1: 'forEach()',
        option2: 'map()',
        option3: 'for...of loop',
        option4: 'All of the above',
        ans: 4,
      },
      {
        question: 'Which of the following statements is true about JavaScript?',
        option1: 'JavaScript is a statically-typed language',
        option2: 'JavaScript is a compiled language',
        option3: 'JavaScript is a dynamically-typed language',
        option4: 'JavaScript is not an object-oriented language',
        ans: 3,
      },
      {
        question: 'How can you create a new array with the elements of an existing array in JavaScript?',
        option1: 'arr.copy()',
        option2: 'arr.slice()',
        option3: 'arr.clone()',
        option4: 'arr.splice()',
        ans: 2,
      },
      {
        question: 'What is the correct syntax for a for loop in JavaScript?',
        option1: 'for (let i = 0; i < 5; i++) {}',
        option2: 'for (let i = 0; i < 5; i--) {}',
        option3: 'for (let i = 0; i > 5; i++) {}',
        option4: 'for (i < 5; i++) {}',
        ans: 1,
      },
      {
        question: 'What is the output of the following code? console.log(2 + "2");',
        option1: '4',
        option2: '22',
        option3: 'NaN',
        option4: 'Error',
        ans: 2,
      },
      {
        question: 'Which of the following is true about closures in JavaScript?',
        option1: 'A closure is a function that has access to its own scope, the outer functionâ€™s scope, and the global scope',
        option2: 'A closure is only accessible within the function that defined it',
        option3: 'Closures are not supported in JavaScript',
        option4: 'Closures only work in strict mode',
        ans: 1,
      },
      {
        question: 'Which of the following is NOT a valid array method in JavaScript?',
        option1: 'forEach()',
        option2: 'map()',
        option3: 'filter()',
        option4: 'findAll()',
        ans: 4,
      },
      {
        question: 'What is the default value of the "this" keyword in a regular function?',
        option1: 'The object calling the function',
        option2: 'The global object',
        option3: 'undefined',
        option4: 'None of the above',
        ans: 2,
      },
      {
        question: 'How do you add a property to an object in JavaScript?',
        option1: 'object.addProperty()',
        option2: 'object.property = value;',
        option3: 'object.add("property", value);',
        option4: 'object.setProperty(property, value);',
        ans: 2,
      },
      {
        question: 'Which function is used to execute code after a specified delay in JavaScript?',
        option1: 'setTimeout()',
        option2: 'setInterval()',
        option3: 'timeout()',
        option4: 'waitFor()',
        ans: 1,
      },
      {
        question: 'How do you check if a variable is an array in JavaScript?',
        option1: 'Array.isArray(variable)',
        option2: 'variable.isArray()',
        option3: 'Array(variable)',
        option4: 'variable instanceof Array',
        ans: 1,
      },
      {
        question: 'Which of the following methods can be used to stop a function execution in JavaScript?',
        option1: 'return',
        option2: 'break',
        option3: 'continue',
        option4: 'exit()',
        ans: 1,
      },
      {
        question: 'Which of the following is used to parse a JSON string in JavaScript?',
        option1: 'JSON.stringify()',
        option2: 'JSON.parse()',
        option3: 'JSON.decode()',
        option4: 'JSON.convert()',
        ans: 2,
      },
      {
        question: 'Which of the following operators is used to assign a value to a variable?',
        option1: '=',
        option2: '==',
        option3: '===',
        option4: '+=',
        ans: 1,
      },
      {
        question: 'What will be the output of the following code? console.log(3 == "3");',
        option1: 'true',
        option2: 'false',
        option3: 'undefined',
        option4: 'Error',
        ans: 1,
      },
      {
        question: 'What is the correct way to create an object in JavaScript?',
        option1: 'var obj = {};',
        option2: 'var obj = [];',
        option3: 'var obj = ();',
        option4: 'var obj = new Object();',
        ans: 1,
      },
      {
        question: 'Which method is used to add a new item to the end of an array?',
        option1: 'push()',
        option2: 'pop()',
        option3: 'unshift()',
        option4: 'shift()',
        ans: 1,
      },
      {
        question: 'What does the Array method "concat()" do?',
        option1: 'Combines two or more arrays',
        option2: 'Finds the index of an element in an array',
        option3: 'Removes the last item from an array',
        option4: 'Adds a new element to the array',
        ans: 1,
      },
      {
        question: 'Which of the following is NOT a valid JavaScript data type?',
        option1: 'Boolean',
        option2: 'Number',
        option3: 'Object',
        option4: 'Character',
        ans: 4,
      },
      {
        question: 'What will be the result of the following code? console.log(5 < 10 && 5 > 2);',
        option1: 'true',
        option2: 'false',
        option3: 'undefined',
        option4: 'Error',
        ans: 1,
      },
      {
        question: 'What is the result of the following expression? "Hello".length',
        option1: '5',
        option2: 'Hello',
        option3: 'undefined',
        option4: 'Error',
        ans: 1,
      },
      {
        question: 'Which of the following methods can be used to convert a number to a string?',
        option1: 'toString()',
        option2: 'parseInt()',
        option3: 'toNumber()',
        option4: 'convertToString()',
        ans: 1,
      },
      {
        question: 'Which of the following can be used to loop through the properties of an object?',
        option1: 'for...in',
        option2: 'for...of',
        option3: 'forEach()',
        option4: 'for()',
        ans: 1,
      },
      {
        question: 'Which function is used to remove the first element of an array?',
        option1: 'shift()',
        option2: 'pop()',
        option3: 'unshift()',
        option4: 'slice()',
        ans: 1,
      },
      {
        question: 'What does the "isNaN()" function do in JavaScript?',
        option1: 'Checks if a value is not a number',
        option2: 'Converts a value to a number',
        option3: 'Checks if a number is NaN',
        option4: 'Checks if a value is a number',
        ans: 1,
      },
      {
        question: 'Which of the following statements about JavaScript is true?',
        option1: 'JavaScript is a case-sensitive language',
        option2: 'JavaScript is not case-sensitive',
        option3: 'JavaScript ignores whitespace',
        option4: 'JavaScript does not support arrays',
        ans: 1,
      },
      {
        question: 'Which operator is used to check for strict equality in JavaScript?',
        option1: '==',
        option2: '===',
        option3: '!=',
        option4: '!==',
        ans: 2,
      },
      {
        question: 'Which of the following is used to stop an iteration in JavaScript?',
        option1: 'continue',
        option2: 'exit',
        option3: 'break',
        option4: 'stop',
        ans: 3,
      },
      {
        question: 'What will be the output of the following code? console.log(10 / "2");',
        option1: '5',
        option2: 'NaN',
        option3: '10',
        option4: 'Error',
        ans: 1,
      },
      {
        question: 'Which of the following methods is used to find the index of a specific element in an array?',
        option1: 'indexOf()',
        option2: 'findIndex()',
        option3: 'getIndex()',
        option4: 'searchIndex()',
        ans: 1,
      },
      {
        question: 'What is the default return value of a function in JavaScript if no return statement is used?',
        option1: 'null',
        option2: 'undefined',
        option3: '0',
        option4: 'false',
        ans: 2,
      },
    
  ];
  